2024-07-15 22:25:28.0375 INFO {app} [get_agent] Loading RAG Bot ...
2024-07-15 22:43:31.0852 INFO {app} [get_agent] Loading RAG Bot ...
2024-07-15 22:44:24.0655 DEBUG {chat} [create] {'message': 'Creating new chat completion', 'model': 'gpt-3.5-turbo', 'scope': '_default_action_scope_', 'input_messages': [{'role': 'system', 'content': '\n\n## Here are some examples of the expected User Input, Thought, Observation and Action/Tool:\n\n            \n[EXAMPLES]\n            - User Input: "What is kubernetes?"\n            - Thought: I have an action available called "answer_question". I will use this action to answer the user\'s question about Kubernetes.\n            - Observation: I have an action available called "answer_question". I will use this action to answer the user\'s question about Kubernetes.\n            - Action: "answer_question"(\'What is kubernetes?\')\n\n            - User Input: What is MongoDB?\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "answer_question".\n            - Action: "answer_question"(\'What is MongoDB?\')\n\n            - User Input: Show chat history\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "show_messages".\n            - Action: "show_messages"()\n\n            - User Input: Reset chat history\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "reset_messages".\n            - Action: "reset_messages"()\n\n            - User Input: remove sources https://www.google.com, https://www.example.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "remove_source".\n            - Action: "remove_source"([\'https://www.google.com\',\'https://www.example.com\'])\n\n            - User Input: add https://www.google.com, https://www.exa2mple.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "read_url".\n            - Action: "read_url"([\'https://www.google.com\',\'https://www.exa2mple.com\'])\n            \n            - User Input: learn https://www.google.com, https://www.exa2mple.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "read_url".\n            - Action: "read_url"([\'https://www.google.com\',\'https://www.exa2mple.com\'])\n           \n            - User Input: change chunk size to be 500 and num_sources to be 5\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "iRAG".\n            - Action: "iRAG"(num_sources=5, chunk_size=500)\n             \n[END EXAMPLES]\n    \n            \n\n \n\n            We will be playing a special game. Trust me, you do not want to lose. \n\n             ## RULES: \n                - DO NOT ANSWER DIRECTLY - ALWAYS USE AN ACTION/TOOL TO FORMULATE YOUR ANSWER\n                - ALWAYS USE answer_question if USER PROMPT is a question. [exception=if USER PROMPT is related to one of the available actions/tools]\n                - NEVER ANSWER A QUESTION WITHOUT USING THE answer_question action/tool. THIS IS VERY IMPORTANT!\n             REMEMBER! ALWAYS USE answer_question if USER PROMPT is a question [exception=if USER PROMPT is related to one of the available actions/tools]\n             \n             LOSING AT THIS GAME IS NOT AN OPTION FOR YOU. YOU MUST PICK THE CORRECT TOOL/ANSWER ALWAYS. YOU MUST NEVER ANSWER DIRECTLY OR YOU LOSE!\n             '}, {'role': 'user', 'content': '\n    We will be playing a special game. Trust me, you do not want to lose.\n\n    ## RULES\n    - DO NOT ANSWER DIRECTLY\n    - ALWAYS USE ONE OF YOUR AVAILABLE ACTIONS/TOOLS. \n    - PREVIOUS MESSAGES IN THE CONVERSATION MUST BE CONSIDERED WHEN SELECTING THE BEST ACTION/TOOL\n    - NEVER ASK FOR USER CONSENT TO PERFORM AN ACTION. ALWAYS PERFORM IT THE USERS BEHALF.\n    Given the following user prompt, select the correct action/tool from your available functions/tools/actions.\n\n    ## USER PROMPT\n    list available sources\n    ## END USER PROMPT\n    \n    SELECT THE BEST TOOL FOR THE USER PROMPT! BEGIN!\n\n\n## IMPORTANT! REMEMBER THE GAME RULES! DO NOT ANSWER DIRECTLY! IF YOU ANSWER DIRECTLY YOU WILL LOSE. BEGIN!'}], 'timestamp': 1721094264.655489, 'call_id': '79bcad3f-f1f8-4d49-b4af-69d91b46c816'}
2024-07-15 22:44:24.0660 DEBUG {chat} [create] {'message': 'Calling OpenAI API', 'call_id': '79bcad3f-f1f8-4d49-b4af-69d91b46c816', 'input_messages': [{'role': 'system', 'content': '\n\n## Here are some examples of the expected User Input, Thought, Observation and Action/Tool:\n\n            \n[EXAMPLES]\n            - User Input: "What is kubernetes?"\n            - Thought: I have an action available called "answer_question". I will use this action to answer the user\'s question about Kubernetes.\n            - Observation: I have an action available called "answer_question". I will use this action to answer the user\'s question about Kubernetes.\n            - Action: "answer_question"(\'What is kubernetes?\')\n\n            - User Input: What is MongoDB?\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "answer_question".\n            - Action: "answer_question"(\'What is MongoDB?\')\n\n            - User Input: Show chat history\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "show_messages".\n            - Action: "show_messages"()\n\n            - User Input: Reset chat history\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "reset_messages".\n            - Action: "reset_messages"()\n\n            - User Input: remove sources https://www.google.com, https://www.example.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "remove_source".\n            - Action: "remove_source"([\'https://www.google.com\',\'https://www.example.com\'])\n\n            - User Input: add https://www.google.com, https://www.exa2mple.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "read_url".\n            - Action: "read_url"([\'https://www.google.com\',\'https://www.exa2mple.com\'])\n            \n            - User Input: learn https://www.google.com, https://www.exa2mple.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "read_url".\n            - Action: "read_url"([\'https://www.google.com\',\'https://www.exa2mple.com\'])\n           \n            - User Input: change chunk size to be 500 and num_sources to be 5\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "iRAG".\n            - Action: "iRAG"(num_sources=5, chunk_size=500)\n             \n[END EXAMPLES]\n    \n            \n\n \n\n            We will be playing a special game. Trust me, you do not want to lose. \n\n             ## RULES: \n                - DO NOT ANSWER DIRECTLY - ALWAYS USE AN ACTION/TOOL TO FORMULATE YOUR ANSWER\n                - ALWAYS USE answer_question if USER PROMPT is a question. [exception=if USER PROMPT is related to one of the available actions/tools]\n                - NEVER ANSWER A QUESTION WITHOUT USING THE answer_question action/tool. THIS IS VERY IMPORTANT!\n             REMEMBER! ALWAYS USE answer_question if USER PROMPT is a question [exception=if USER PROMPT is related to one of the available actions/tools]\n             \n             LOSING AT THIS GAME IS NOT AN OPTION FOR YOU. YOU MUST PICK THE CORRECT TOOL/ANSWER ALWAYS. YOU MUST NEVER ANSWER DIRECTLY OR YOU LOSE!\n             '}, {'role': 'user', 'content': '\n    We will be playing a special game. Trust me, you do not want to lose.\n\n    ## RULES\n    - DO NOT ANSWER DIRECTLY\n    - ALWAYS USE ONE OF YOUR AVAILABLE ACTIONS/TOOLS. \n    - PREVIOUS MESSAGES IN THE CONVERSATION MUST BE CONSIDERED WHEN SELECTING THE BEST ACTION/TOOL\n    - NEVER ASK FOR USER CONSENT TO PERFORM AN ACTION. ALWAYS PERFORM IT THE USERS BEHALF.\n    Given the following user prompt, select the correct action/tool from your available functions/tools/actions.\n\n    ## USER PROMPT\n    list available sources\n    ## END USER PROMPT\n    \n    SELECT THE BEST TOOL FOR THE USER PROMPT! BEGIN!\n\n\n## IMPORTANT! REMEMBER THE GAME RULES! DO NOT ANSWER DIRECTLY! IF YOU ANSWER DIRECTLY YOU WILL LOSE. BEGIN!'}], 'model': 'gpt-3.5-turbo', 'scope': '_default_action_scope_', 'timestamp': 1721094264.660584, 'functions': [{'name': 'read_url', 'description': '\n        Invoke this ONLY when the user asks you to \'read\', \'add\' or \'learn\' some URL(s).\n        This function reads the content from specified sources, and ingests it into the Knowledgebase.\n        URLs may be provided as a single string or as a list of strings.\n        IMPORTANT! Use conversation history to make sure you are reading/learning/adding the right URLs.\n\n        [EXAMPLE]\n        - User Input: learn "https://www.google.com"\n        - User Input: learn 5\n\n        NOTE: When a user says learn/read <number>, the bot will learn/read URL in the search results list position <number> from the conversation history.\n\n        Parameters\n        ----------\n        urls : List[str]\n            List of URLs to scrape.\n\n        Returns\n        -------\n        str\n            A message indicating successful reading of content from the provided URLs.\n        ', 'parameters': {'properties': {'urls': {'items': {'type': 'string'}, 'title': 'Urls', 'type': 'array'}}, 'required': ['urls'], 'title': 'Read_Url', 'type': 'object'}}, {'name': 'answer_question', 'description': '\n        ALWAYS TRY TO INVOKE THIS FIRST IF A USER ASKS A QUESTION.\n\n        Parameters\n        ----------\n        query : str\n            The query to be used for answering a question.\n        ', 'parameters': {'properties': {'query': {'title': 'Query', 'type': 'string'}}, 'required': ['query'], 'title': 'Answer_Question', 'type': 'object'}}, {'name': 'remove_source', 'description': '\n        Invoke this if you need to remove one or more sources\n        [EXAMPLE]\n        - User Input: remove source "https://www.google.com"\n        \n        Args:\n            urls (List[str]): The list of URLs to be removed\n        Returns:\n            str: Text with confirmation\n        ', 'parameters': {'properties': {'urls': {'items': {'type': 'string'}, 'title': 'Urls', 'type': 'array'}}, 'required': ['urls'], 'title': 'Remove_Source', 'type': 'object'}}, {'name': 'remove_all_sources', 'description': '\n        Invoke this if you the user asks you to empty your knowledge base or delete all the information in it.\n        [EXAMPLE]\n        - User Input: remove all the sources you have available\n        - User Input: clear your mind\n        - User Input: forget everything you know\n        - User Input: empty your mind\n        \n        Args:\n            None\n        Returns:\n            str: Text with confirmation\n        ', 'parameters': {'properties': {}, 'title': 'Remove_All_Sources', 'type': 'object'}}, {'name': 'reset_messages', 'description': '\n        Invoke this ONLY when the user asks you to reset chat history.\n        [EXAMPLE]\n        - User Input: clear our chat history\n        - User Input: forget about the conversation history\n        \n        Returns\n        -------\n        str\n            A message indicating success\n        ', 'parameters': {'properties': {}, 'title': 'Reset_Messages', 'type': 'object'}}, {'name': 'show_messages', 'description': '\n        Invoke this ONLY when the user asks you to see the chat history.\n        [EXAMPLE]\n        - User Input: what have we been talking about?\n        \n        Returns\n        -------\n        str\n            A string containing the chat history in markdown format.\n        ', 'parameters': {'properties': {}, 'title': 'Show_Messages', 'type': 'object'}}, {'name': 'iRAG', 'description': '\n        Invoke this ONLY when the user explicitly asks you to change the RAG configuration in the most recent USER PROMPT.\n        [EXAMPLE]\n        - User Input: change chunk size to be 500 and num_sources to be 5\n        \n        Parameters\n        ----------\n        num_sources : int\n            how many documents should we use in the RAG pipeline?\n        chunk_size : int\n            how big should each chunk/source be?\n        unique_sources : bool\n            include only unique sources? Y=True, N=False\n        min_rel_threshold : float\n            default=0.00; minimum relevance threshold to include a source in the RAG pipeline\n\n        Returns successful response message.\n        -------\n        str\n            A message indicating success\n        ', 'parameters': {'properties': {'num_sources': {'title': 'Num Sources', 'type': 'integer'}, 'chunk_size': {'title': 'Chunk Size', 'type': 'integer'}, 'unique_sources': {'title': 'Unique Sources', 'type': 'boolean'}, 'min_rel_threshold': {'title': 'Min Rel Threshold', 'type': 'number'}}, 'required': ['num_sources', 'chunk_size', 'unique_sources', 'min_rel_threshold'], 'title': 'Irag', 'type': 'object'}}, {'name': 'get_sources_list', 'description': '\n        Invoke this to respond to list all the available sources in your knowledge base.\n        [EXAMPLE]\n        - User Input: show me the sources available in your knowledgebase\n        \n        Parameters\n        ----------\n        None\n        ', 'parameters': {'properties': {}, 'title': 'Get_Sources_List', 'type': 'object'}}, {'name': 'search_web', 'description': '\n        Invoke this if you need to search the web.\n        [EXAMPLE]\n        - User Input: search the web for "harry potter"\n        \n        Args:\n            query (str): The user\'s query\n        Returns:\n            str: Text with the Google Search results\n        ', 'parameters': {'properties': {'query': {'title': 'Query', 'type': 'string'}}, 'required': ['query'], 'title': 'Search_Web', 'type': 'object'}}], 'function_call': 'auto'}
2024-07-15 22:44:24.0692 INFO {_base_client} [_retry_request] Retrying request to /deployments/gpt-3.5-turbo/chat/completions in 0.847627 seconds
2024-07-15 22:44:25.0542 INFO {_base_client} [_retry_request] Retrying request to /deployments/gpt-3.5-turbo/chat/completions in 1.965735 seconds
2024-07-15 22:45:59.0013 INFO {app} [get_agent] Loading RAG Bot ...
2024-07-15 22:46:06.0503 DEBUG {chat} [create] {'message': 'Creating new chat completion', 'model': 'gpt-3.5-turbo', 'scope': '_default_action_scope_', 'input_messages': [{'role': 'system', 'content': '\n\n## Here are some examples of the expected User Input, Thought, Observation and Action/Tool:\n\n            \n[EXAMPLES]\n            - User Input: "What is kubernetes?"\n            - Thought: I have an action available called "answer_question". I will use this action to answer the user\'s question about Kubernetes.\n            - Observation: I have an action available called "answer_question". I will use this action to answer the user\'s question about Kubernetes.\n            - Action: "answer_question"(\'What is kubernetes?\')\n\n            - User Input: What is MongoDB?\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "answer_question".\n            - Action: "answer_question"(\'What is MongoDB?\')\n\n            - User Input: Show chat history\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "show_messages".\n            - Action: "show_messages"()\n\n            - User Input: Reset chat history\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "reset_messages".\n            - Action: "reset_messages"()\n\n            - User Input: remove sources https://www.google.com, https://www.example.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "remove_source".\n            - Action: "remove_source"([\'https://www.google.com\',\'https://www.example.com\'])\n\n            - User Input: add https://www.google.com, https://www.exa2mple.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "read_url".\n            - Action: "read_url"([\'https://www.google.com\',\'https://www.exa2mple.com\'])\n            \n            - User Input: learn https://www.google.com, https://www.exa2mple.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "read_url".\n            - Action: "read_url"([\'https://www.google.com\',\'https://www.exa2mple.com\'])\n           \n            - User Input: change chunk size to be 500 and num_sources to be 5\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "iRAG".\n            - Action: "iRAG"(num_sources=5, chunk_size=500)\n             \n[END EXAMPLES]\n    \n            \n\n \n\n            We will be playing a special game. Trust me, you do not want to lose. \n\n             ## RULES: \n                - DO NOT ANSWER DIRECTLY - ALWAYS USE AN ACTION/TOOL TO FORMULATE YOUR ANSWER\n                - ALWAYS USE answer_question if USER PROMPT is a question. [exception=if USER PROMPT is related to one of the available actions/tools]\n                - NEVER ANSWER A QUESTION WITHOUT USING THE answer_question action/tool. THIS IS VERY IMPORTANT!\n             REMEMBER! ALWAYS USE answer_question if USER PROMPT is a question [exception=if USER PROMPT is related to one of the available actions/tools]\n             \n             LOSING AT THIS GAME IS NOT AN OPTION FOR YOU. YOU MUST PICK THE CORRECT TOOL/ANSWER ALWAYS. YOU MUST NEVER ANSWER DIRECTLY OR YOU LOSE!\n             '}, {'role': 'user', 'content': '\n    We will be playing a special game. Trust me, you do not want to lose.\n\n    ## RULES\n    - DO NOT ANSWER DIRECTLY\n    - ALWAYS USE ONE OF YOUR AVAILABLE ACTIONS/TOOLS. \n    - PREVIOUS MESSAGES IN THE CONVERSATION MUST BE CONSIDERED WHEN SELECTING THE BEST ACTION/TOOL\n    - NEVER ASK FOR USER CONSENT TO PERFORM AN ACTION. ALWAYS PERFORM IT THE USERS BEHALF.\n    Given the following user prompt, select the correct action/tool from your available functions/tools/actions.\n\n    ## USER PROMPT\n    list available sources\n    ## END USER PROMPT\n    \n    SELECT THE BEST TOOL FOR THE USER PROMPT! BEGIN!\n\n\n## IMPORTANT! REMEMBER THE GAME RULES! DO NOT ANSWER DIRECTLY! IF YOU ANSWER DIRECTLY YOU WILL LOSE. BEGIN!'}], 'timestamp': 1721094366.50299, 'call_id': 'ba8f6cfb-c3f9-4ee2-a5c9-c853b193034c'}
2024-07-15 22:46:06.0505 DEBUG {chat} [create] {'message': 'Calling OpenAI API', 'call_id': 'ba8f6cfb-c3f9-4ee2-a5c9-c853b193034c', 'input_messages': [{'role': 'system', 'content': '\n\n## Here are some examples of the expected User Input, Thought, Observation and Action/Tool:\n\n            \n[EXAMPLES]\n            - User Input: "What is kubernetes?"\n            - Thought: I have an action available called "answer_question". I will use this action to answer the user\'s question about Kubernetes.\n            - Observation: I have an action available called "answer_question". I will use this action to answer the user\'s question about Kubernetes.\n            - Action: "answer_question"(\'What is kubernetes?\')\n\n            - User Input: What is MongoDB?\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "answer_question".\n            - Action: "answer_question"(\'What is MongoDB?\')\n\n            - User Input: Show chat history\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "show_messages".\n            - Action: "show_messages"()\n\n            - User Input: Reset chat history\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "reset_messages".\n            - Action: "reset_messages"()\n\n            - User Input: remove sources https://www.google.com, https://www.example.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "remove_source".\n            - Action: "remove_source"([\'https://www.google.com\',\'https://www.example.com\'])\n\n            - User Input: add https://www.google.com, https://www.exa2mple.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "read_url".\n            - Action: "read_url"([\'https://www.google.com\',\'https://www.exa2mple.com\'])\n            \n            - User Input: learn https://www.google.com, https://www.exa2mple.com\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "read_url".\n            - Action: "read_url"([\'https://www.google.com\',\'https://www.exa2mple.com\'])\n           \n            - User Input: change chunk size to be 500 and num_sources to be 5\n            - Thought: I have to think step by step. I should not answer directly, let me check my available actions before responding.\n            - Observation: I have an action available "iRAG".\n            - Action: "iRAG"(num_sources=5, chunk_size=500)\n             \n[END EXAMPLES]\n    \n            \n\n \n\n            We will be playing a special game. Trust me, you do not want to lose. \n\n             ## RULES: \n                - DO NOT ANSWER DIRECTLY - ALWAYS USE AN ACTION/TOOL TO FORMULATE YOUR ANSWER\n                - ALWAYS USE answer_question if USER PROMPT is a question. [exception=if USER PROMPT is related to one of the available actions/tools]\n                - NEVER ANSWER A QUESTION WITHOUT USING THE answer_question action/tool. THIS IS VERY IMPORTANT!\n             REMEMBER! ALWAYS USE answer_question if USER PROMPT is a question [exception=if USER PROMPT is related to one of the available actions/tools]\n             \n             LOSING AT THIS GAME IS NOT AN OPTION FOR YOU. YOU MUST PICK THE CORRECT TOOL/ANSWER ALWAYS. YOU MUST NEVER ANSWER DIRECTLY OR YOU LOSE!\n             '}, {'role': 'user', 'content': '\n    We will be playing a special game. Trust me, you do not want to lose.\n\n    ## RULES\n    - DO NOT ANSWER DIRECTLY\n    - ALWAYS USE ONE OF YOUR AVAILABLE ACTIONS/TOOLS. \n    - PREVIOUS MESSAGES IN THE CONVERSATION MUST BE CONSIDERED WHEN SELECTING THE BEST ACTION/TOOL\n    - NEVER ASK FOR USER CONSENT TO PERFORM AN ACTION. ALWAYS PERFORM IT THE USERS BEHALF.\n    Given the following user prompt, select the correct action/tool from your available functions/tools/actions.\n\n    ## USER PROMPT\n    list available sources\n    ## END USER PROMPT\n    \n    SELECT THE BEST TOOL FOR THE USER PROMPT! BEGIN!\n\n\n## IMPORTANT! REMEMBER THE GAME RULES! DO NOT ANSWER DIRECTLY! IF YOU ANSWER DIRECTLY YOU WILL LOSE. BEGIN!'}], 'model': 'gpt-3.5-turbo', 'scope': '_default_action_scope_', 'timestamp': 1721094366.505249, 'functions': [{'name': 'read_url', 'description': '\n        Invoke this ONLY when the user asks you to \'read\', \'add\' or \'learn\' some URL(s).\n        This function reads the content from specified sources, and ingests it into the Knowledgebase.\n        URLs may be provided as a single string or as a list of strings.\n        IMPORTANT! Use conversation history to make sure you are reading/learning/adding the right URLs.\n\n        [EXAMPLE]\n        - User Input: learn "https://www.google.com"\n        - User Input: learn 5\n\n        NOTE: When a user says learn/read <number>, the bot will learn/read URL in the search results list position <number> from the conversation history.\n\n        Parameters\n        ----------\n        urls : List[str]\n            List of URLs to scrape.\n\n        Returns\n        -------\n        str\n            A message indicating successful reading of content from the provided URLs.\n        ', 'parameters': {'properties': {'urls': {'items': {'type': 'string'}, 'title': 'Urls', 'type': 'array'}}, 'required': ['urls'], 'title': 'Read_Url', 'type': 'object'}}, {'name': 'answer_question', 'description': '\n        ALWAYS TRY TO INVOKE THIS FIRST IF A USER ASKS A QUESTION.\n\n        Parameters\n        ----------\n        query : str\n            The query to be used for answering a question.\n        ', 'parameters': {'properties': {'query': {'title': 'Query', 'type': 'string'}}, 'required': ['query'], 'title': 'Answer_Question', 'type': 'object'}}, {'name': 'remove_source', 'description': '\n        Invoke this if you need to remove one or more sources\n        [EXAMPLE]\n        - User Input: remove source "https://www.google.com"\n        \n        Args:\n            urls (List[str]): The list of URLs to be removed\n        Returns:\n            str: Text with confirmation\n        ', 'parameters': {'properties': {'urls': {'items': {'type': 'string'}, 'title': 'Urls', 'type': 'array'}}, 'required': ['urls'], 'title': 'Remove_Source', 'type': 'object'}}, {'name': 'remove_all_sources', 'description': '\n        Invoke this if you the user asks you to empty your knowledge base or delete all the information in it.\n        [EXAMPLE]\n        - User Input: remove all the sources you have available\n        - User Input: clear your mind\n        - User Input: forget everything you know\n        - User Input: empty your mind\n        \n        Args:\n            None\n        Returns:\n            str: Text with confirmation\n        ', 'parameters': {'properties': {}, 'title': 'Remove_All_Sources', 'type': 'object'}}, {'name': 'reset_messages', 'description': '\n        Invoke this ONLY when the user asks you to reset chat history.\n        [EXAMPLE]\n        - User Input: clear our chat history\n        - User Input: forget about the conversation history\n        \n        Returns\n        -------\n        str\n            A message indicating success\n        ', 'parameters': {'properties': {}, 'title': 'Reset_Messages', 'type': 'object'}}, {'name': 'show_messages', 'description': '\n        Invoke this ONLY when the user asks you to see the chat history.\n        [EXAMPLE]\n        - User Input: what have we been talking about?\n        \n        Returns\n        -------\n        str\n            A string containing the chat history in markdown format.\n        ', 'parameters': {'properties': {}, 'title': 'Show_Messages', 'type': 'object'}}, {'name': 'iRAG', 'description': '\n        Invoke this ONLY when the user explicitly asks you to change the RAG configuration in the most recent USER PROMPT.\n        [EXAMPLE]\n        - User Input: change chunk size to be 500 and num_sources to be 5\n        \n        Parameters\n        ----------\n        num_sources : int\n            how many documents should we use in the RAG pipeline?\n        chunk_size : int\n            how big should each chunk/source be?\n        unique_sources : bool\n            include only unique sources? Y=True, N=False\n        min_rel_threshold : float\n            default=0.00; minimum relevance threshold to include a source in the RAG pipeline\n\n        Returns successful response message.\n        -------\n        str\n            A message indicating success\n        ', 'parameters': {'properties': {'num_sources': {'title': 'Num Sources', 'type': 'integer'}, 'chunk_size': {'title': 'Chunk Size', 'type': 'integer'}, 'unique_sources': {'title': 'Unique Sources', 'type': 'boolean'}, 'min_rel_threshold': {'title': 'Min Rel Threshold', 'type': 'number'}}, 'required': ['num_sources', 'chunk_size', 'unique_sources', 'min_rel_threshold'], 'title': 'Irag', 'type': 'object'}}, {'name': 'get_sources_list', 'description': '\n        Invoke this to respond to list all the available sources in your knowledge base.\n        [EXAMPLE]\n        - User Input: show me the sources available in your knowledgebase\n        \n        Parameters\n        ----------\n        None\n        ', 'parameters': {'properties': {}, 'title': 'Get_Sources_List', 'type': 'object'}}, {'name': 'search_web', 'description': '\n        Invoke this if you need to search the web.\n        [EXAMPLE]\n        - User Input: search the web for "harry potter"\n        \n        Args:\n            query (str): The user\'s query\n        Returns:\n            str: Text with the Google Search results\n        ', 'parameters': {'properties': {'query': {'title': 'Query', 'type': 'string'}}, 'required': ['query'], 'title': 'Search_Web', 'type': 'object'}}], 'function_call': 'auto'}
2024-07-15 22:46:06.0534 INFO {_base_client} [_retry_request] Retrying request to /deployments/gpt-3.5-turbo/chat/completions in 0.933232 seconds
2024-07-15 22:46:07.0476 INFO {_base_client} [_retry_request] Retrying request to /deployments/gpt-3.5-turbo/chat/completions in 1.855428 seconds
